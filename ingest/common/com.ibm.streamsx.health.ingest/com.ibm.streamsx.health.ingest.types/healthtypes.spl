// begin_generated_IBM_copyright_prolog                                       
//                                                                            
// This is an automatically generated copyright prolog.                       
// After initializing,  DO NOT MODIFY OR MOVE                                 
//****************************************************************************
// Copyright (C) 2016 International Business Machines Corporation             
// All Rights Reserved                                                        
//****************************************************************************
// end_generated_IBM_copyright_prolog                                         
namespace com.ibm.streamsx.health.ingest.types ;

public rstring STREAMS_SYSTEM_NAME() {
	return "streamsx.health/1.0";
}

type Reading = int64 ts, ReadingType readingType, float64 value, rstring uom;

type ReadingType = rstring system, rstring code;

type Observation = Device device, rstring patientId, ReadingSource readingSource, Reading reading;
	
type Patient = rstring id, rstring name, rstring gender, rstring DOB, rstring status ;	
	
type Location = rstring id, rstring name, rstring locationType;	

type ReadingSource = rstring id, rstring sourceType, rstring deviceId;

type Device = rstring id, rstring locationId;


/**
 * Represent EMR records
 */
type ClinicalNoteEvent = rstring patientId, rstring eventType,
	rstring eventName, int64 ts, float64 value, rstring uom ;

/**
 * Schema type for service publish
 */
type PublishJson = rstring jsonString ;



//type SignalECGInternal_T = float64 ts, int32 ch1, int32 ch2 ;
//type PatientECGInternal_T = SignalECGInternal_T, tuple<rstring patientId> ;